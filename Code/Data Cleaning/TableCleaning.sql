-- Joshua Table Cleaning
-- Cleaning Product_Subcategory_Clean
CREATE OR REPLACE TABLE PRODUCT_SUBCATEGORY_CLEAN AS 
SELECT
    ProductSubcategoryID,
    ProductCategoryID,
    Name
FROM PRODUCT_SUBCATEGORY
WHERE NAME IS NOT NULL;



-- Cleaning Product_Inventory_Clean
CREATE OR REPLACE TABLE PRODUCT_INVENTORY_CLEAN AS
SELECT
    ProductID,
    LocationID,
    Shelf,
    Bin,
    Quantity,
    ModifiedDate::DATE AS Modified_date
FROM PRODUCT_INVENTORY
WHERE MODIFIEDDATE IS NOT NULL AND PRODUCTID IS NOT NULL;



-- Cleaning Product_Category
CREATE OR REPLACE TABLE PRODUCT_CATEGORY_CLEAN AS
SELECT
    ProductCategoryID,
    name
FROM PRODUCT_CATEGORY
WHERE NAME IS NOT NULL;



-- Cleaning Sales_Store table
CREATE OR REPLACE TABLE Sales_Store_Cleaned AS
SELECT
    BusinessEntityID,
    Name,
    SalesPersonID,
    AnnualSales,
    AnnualRevenue,
    BankName,
    BusinessType,
    YearOpened,
    Specialty,
    SquareFeet,
    Brands,
    Internet,
    NumberEmployees
FROM SALES_STORE_PARSED
WHERE NAME IS NOT NULL;



-- Clean Production_Product_Clean
CREATE OR REPLACE TABLE PRODUCTION_PRODUCT_CLEAN AS
SELECT
    ProductID,
    Name,
    ProductNumber,
    MakeFlag,
    FinishedGoodsFlag,
    Color,
    SafetyStockLevel,
    ReorderPoint,
    StandardCost,
    ListPrice,
    Size,
    SizeUnitMeasureCode,
    WeightUnitMeasureCode,
    Weight,
    DaysToManufacture,
    ProductLine,
    Class,
    Style,
    ProductSubcategoryID,
    ProductModelID,
    SellStartDate::DATE AS SellStartDate,
    SellEndDate::DATE AS SellEndDate,
    DiscontinuedDate::DATE AS DiscontinuedDate
FROM PRODUCTION_PRODUCT
WHERE NAME IS NOT NULL AND PRODUCTNUMBER IS NOT NULL AND SELLSTARTDATE IS NOT NULL AND LISTPRICE != 0 AND PRODUCTSUBCATEGORYID
IS NOT NULL AND PRODUCTMODELID IS NOT NULL;



-- NULLS in size unit measure code are either due to no size unit measure code
-- or due to sizes being in alphabetic representaion (S, M, L) or other ways such as shirt sizes

-- NULLS in SellEndDate and DiscontinuedDate are due to item not being discontinued or not having the sale ended
-- There are also nulls in weight, weightmeasurecode, class, and style





--Create cleaned table for PERSON_ADDRESS
CREATE OR REPLACE TABLE PERSON_ADDRESS_CLEANED AS
SELECT ADDRESSID, ADDRESSLINE1, ADDRESSLINE2,CITY,STATEPROVINCEID,
POSTALCODE,SPATIALLOCATION, ROWGUID, MODIFIEDDATE::DATE AS MODIFIEDDATE
FROM PERSON_ADDRESS
    
--Cleaning of PERSON_ADDRESS table
SELECT * FROM PERSON_ADDRESS_CLEANED

--Check for duplicate ids
SELECT ADDRESSID, COUNT(*) AS duplicate_count
FROM PERSON_ADDRESS_CLEANED
GROUP BY ADDRESSID
HAVING COUNT(*) > 1;
--No duplicates so no need to handle

--Merge the 2 address columns together
--Create new column for the full address
ALTER TABLE PERSON_ADDRESS_CLEANED ADD COLUMN ADDRESS STRING;

--Add data to the new column and drop the old columns
UPDATE PERSON_ADDRESS_CLEANED
SET ADDRESS = COALESCE(ADDRESSLINE1, '') || ' ' || COALESCE(ADDRESSLINE2, '');
ALTER TABLE PERSON_ADDRESS_CLEANED DROP COLUMN ADDRESSLINE1, ADDRESSLINE2;

--Check for null values
SELECT *
FROM PERSON_ADDRESS_CLEANED
WHERE ADDRESSID IS NULL OR CITY IS NULL OR STATEPROVINCEID IS NULL OR POSTALCODE IS NULL
OR SPATIALLOCATION IS NULL IS NULL OR MODIFIEDDATE IS NULL OR ADDRESS IS NULL

--Drop unneeded columns
ALTER TABLE PERSON_ADDRESS_CLEANED DROP COLUMN ROWGUID

--Check the table again
SELECT * FROM PERSON_ADDRESS_CLEANED



--Create cleaned table for HUMANRESOURCES_EMPLOYEE
CREATE OR REPLACE TABLE HUMANRESOURCES_EMPLOYEE_CLEANED AS
SELECT BUSINESSENTITYID, NATIONALIDNUMBER, LOGINID, ORGANIZATIONNODE, ORGANIZATIONLEVEL, JOBTITLE, BIRTHDATE, MARITALSTATUS, GENDER, HIREDATE, SALARIEDFLAG, VACATIONHOURS, SICKLEAVEHOURS, CURRENTFLAG, ROWGUID, MODIFIEDDATE::DATE AS MODIFIEDDATE
FROM HUMANRESOURCES_EMPLOYEE

--Cleaning of HUMANRESOURCES_EMPLOYEE table
SELECT * FROM HUMANRESOURCES_EMPLOYEE_CLEANED

--Check for duplicate ids
SELECT BUSINESSENTITYID, COUNT(*) AS duplicate_count
FROM HUMANRESOURCES_EMPLOYEE_CLEANED
GROUP BY BUSINESSENTITYID
HAVING COUNT(*) > 1;
--No duplicates

--Drop unneeded columns
ALTER TABLE HUMANRESOURCES_EMPLOYEE_CLEANED DROP COLUMN ROWGUID

--Check for null values
SELECT *
FROM HUMANRESOURCES_EMPLOYEE_CLEANED
WHERE BUSINESSENTITYID IS NULL OR NATIONALIDNUMBER IS NULL OR LOGINID IS NULL 
OR ORGANIZATIONNODE IS NULL OR ORGANIZATIONLEVEL IS NULL OR JOBTITLE IS NULL 
OR BIRTHDATE IS NULL OR MARITALSTATUS IS NULL OR GENDER IS NULL
OR HIREDATE IS NULL OR SALARIEDFLAG IS NULL OR VACATIONHOURS IS NULL
OR SICKLEAVEHOURS IS NULL OR CURRENTFLAG IS NULL OR MODIFIEDDATE IS NULL

--Check the table again
SELECT * FROM HUMANRESOURCES_EMPLOYEE_CLEANED

















--Create cleaned table for PERSON_STATEPROVINCE
CREATE OR REPLACE TABLE PERSON_STATEPROVINCE_CLEANED AS
SELECT STATEPROVINCEID, STATEPROVINCECODE, COUNTRYREGIONCODE, ISONLYSTATEPROVINCEFLAG, NAME, TERRITORYID, MODIFIEDDATE::DATE AS MODIFIEDDATE
FROM PERSON_STATEPROVINCE

--Cleaning of PERSON_STATEPROVINCE table
SELECT * FROM PERSON_STATEPROVINCE_CLEANED

--Check for duplicate ids
SELECT STATEPROVINCEID, COUNT(*) AS duplicate_count
FROM PERSON_STATEPROVINCE_CLEANED
GROUP BY STATEPROVINCEID
HAVING COUNT(*) > 1;
-- No duplicates

--Check for null values
SELECT *
FROM PERSON_STATEPROVINCE_CLEANED
WHERE STATEPROVINCEID IS NULL OR STATEPROVINCECODE IS NULL OR COUNTRYREGIONCODE IS NULL
OR ISONLYSTATEPROVINCEFLAG IS NULL OR NAME IS NULL OR TERRITORYID IS NULL
OR MODIFIEDDATE IS NULL

--Checking of PERSON_STATEPROVINCE table again
SELECT * FROM PERSON_STATEPROVINCE_CLEANED





--Create cleaned table for SALES_SPECIALOFFERPRODUCT
CREATE OR REPLACE TABLE SALES_SPECIALOFFERPRODUCT_CLEANED AS
SELECT SPECIALOFFERID, PRODUCTID, ROWGUID, MODIFIEDDATE::DATE AS MODIFIEDDATE
FROM SALES_SPECIALOFFERPRODUCT

--Cleaning of SALES_SPECIALOFFERPRODUCT table
SELECT * FROM SALES_SPECIALOFFERPRODUCT_CLEANED

--Check for duplicate ids
SELECT SPECIALOFFERID, PRODUCTID, COUNT(*) AS duplicate_count
FROM SALES_SPECIALOFFERPRODUCT_CLEANED
GROUP BY SPECIALOFFERID, PRODUCTID
HAVING COUNT(*) > 1;
-- No duplicates

--Drop unneeded columns
ALTER TABLE SALES_SPECIALOFFERPRODUCT_CLEANED DROP COLUMN ROWGUID

--Check for null values
SELECT *
FROM SALES_SPECIALOFFERPRODUCT_CLEANED
WHERE SPECIALOFFERID IS NULL OR PRODUCTID IS NULL OR MODIFIEDDATE IS NULL

--Check the table again
SELECT * FROM SALES_SPECIALOFFERPRODUCT_CLEANED


--Create cleaned table for SALES_SPECIALOFFER
CREATE OR REPLACE TABLE SALES_SPECIALOFFER_CLEANED AS
SELECT SPECIALOFFERID, DESCRIPTION, DISCOUNTPCT, TYPE, CATEGORY, STARTDATE, ENDDATE, MINQTY, MAXQTY, ROWGUID, MODIFIEDDATE::DATE AS MODIFIEDDATE
FROM SALES_SPECIALOFFER

--Cleaning of table SALES_SPECIALOFFER
SELECT * FROM SALES_SPECIALOFFER_CLEANED

--Check for duplicate ids
SELECT SPECIALOFFERID, COUNT(*) AS duplicate_count
FROM SALES_SPECIALOFFER_CLEANED
GROUP BY SPECIALOFFERID
HAVING COUNT(*) > 1;
-- No duplicates

--Drop unneeded columns
ALTER TABLE SALES_SPECIALOFFER_CLEANED DROP COLUMN ROWGUID

--Check for null values
SELECT *
FROM SALES_SPECIALOFFER_CLEANED
WHERE SPECIALOFFERID IS NULL OR DESCRIPTION IS NULL OR DISCOUNTPCT IS NULL
OR TYPE IS NULL OR CATEGORY IS NULL OR STARTDATE IS NULL OR ENDDATE IS NULL
OR MINQTY IS NULL OR MAXQTY IS NULL OR MODIFIEDDATE IS NULL

--Check the table again
SELECT * FROM SALES_SPECIALOFFERPRODUCT_CLEANED





--Zachariah Loy
CREATE OR REPLACE TABLE PURCHASING_PRODUCTVENDOR_CLEANED AS 
SELECT 
PRODUCTID,
BUSINESSENTITYID,
AVERAGELEADTIME,
STANDARDPRICE,
LASTRECEIPTCOST,
LASTRECEIPTDATE::DATE AS LASTRECEIPT_DATE,
MINORDERQTY,
MAXORDERQTY,
COALESCE(ONORDERQTY, 0) AS ONORDER_QTY,
UNITMEASURECODE,
MODIFIEDDATE::DATE AS MODIFIED_DATE
FROM PURCHASING_PRODUCTVENDOR
WHERE MODIFIED_DATE IS NOT NULL AND LASTRECEIPT_DATE IS NOT NULL;

SELECT * FROM PURCHASING_PRODUCTVENDOR_CLEANED


SELECT * FROM PURCHASING_PURCHASEORDERDETAIL

CREATE OR REPLACE TABLE PURCHASING_PURCHASEORDERDETAIL_CLEANED AS 
SELECT
PURCHASEORDERID,
PURCHASEORDERDETAILID,
DUEDATE::DATE AS DUE_DATE,
ORDERQTY,
PRODUCTID,
UNITPRICE ,
LINETOTAL,
RECEIVEDQTY,
REJECTEDQTY, 
STOCKEDQTY,
MODIFIEDDATE::DATE AS MODIFIED_DATE
FROM PURCHASING_PURCHASEORDERDETAIL
WHERE MODIFIED_DATE IS NOT NULL AND DUE_DATE IS NOT NULL;

SELECT * FROM PURCHASING_PURCHASEORDERDETAIL_CLEANED


SELECT * FROM PURCHASING_SHIPMETHOD

CREATE OR REPLACE TABLE PURCHASING_SHIPMETHOD_CLEANED AS
SELECT
SHIPMETHODID,
NAME,
SHIPBASE,
SHIPRATE,
MODIFIEDDATE::DATE AS MODIFIED_DATE
FROM PURCHASING_SHIPMETHOD
WHERE MODIFIED_DATE IS NOT NULL;

SELECT * FROM PURCHASING_SHIPMETHOD_CLEANED



SELECT * FROM PURCHASING_PURCHASEORDERHEADER

CREATE OR REPLACE TABLE PURCHASING_PURCHASEORDERHEADER_CLEANED AS 
SELECT
PURCHASEORDERID,
REVISIONNUMBER,
STATUS,
EMPLOYEEID,
VENDORID,
SHIPMETHODID,
ORDERDATE::DATE AS ORDER_DATE,
SHIPDATE::DATE AS SHIP_DATE,
SUBTOTAL,
TAXAMT,
FREIGHT,
TOTALDUE,
MODIFIEDDATE::DATE AS MODIFIED_DATE
FROM PURCHASING_PURCHASEORDERHEADER
WHERE SHIP_DATE IS NOT NULL AND ORDER_DATE IS NOT NULL AND MODIFIED_DATE IS NOT NULL;

SELECT * FROM PURCHASING_PURCHASEORDERHEADER_CLEANED


SELECT * FROM PURCHASING_VENDOR

CREATE OR REPLACE TABLE PURCHASING_VENDOR_CLEANED AS 
SELECT
BUSINESSENTITYID,
ACCOUNTNUMBER,
NAME,
CREDITRATING,
PREFERREDVENDORSTATUS,
ACTIVEFLAG,
COALESCE(PURCHASINGWEBSERVICEURL, 'no_url') AS PURCHASINGWEBSERVICE_URL,
MODIFIEDDATE::DATE AS MODIFIED_DATE
FROM PURCHASING_VENDOR 
WHERE MODIFIED_DATE IS NOT NULL;

SELECT * FROM PURCHASING_VENDOR_CLEANED

-- Jaden Table cleaning    
-- cleaning for Sales_SalesTerritory
-- select needed columns and standardise data columns
CREATE OR REPLACE TABLE Sales_SalesTerritory_clean AS
SELECT 
TERRITORYID,
NAME, 
COUNTRYREGIONCODE,
"Group",
SALESYTD,
SALESLASTYEAR,
MODIFIEDDATE::DATE AS MODIFIEDDATE
FROM Sales_SalesTerritory

-- cleaning for Sales_Customer
-- select needed columns
CREATE OR REPLACE TABLE Sales_Customer_clean AS
SELECT 
CUSTOMERID,
PERSONID,
STOREID,
TERRITORYID,
ACCOUNTNUMBER,
MODIFIEDDATE::DATE AS MODIFIEDDATE
FROM Sales_Customer

-- there is null in PersonID, null when it is a store
-- there is null in StoreID, null when it is a customer
-- if both are not null, they are a employee
-- thus no need to impute these nulls


-- cleaning for Sales_SalesOrderHeader
-- select needed columns
CREATE OR REPLACE TABLE Sales_SalesOrderHeader_clean AS
SELECT 
SALESORDERID,
ORDERDATE::DATE AS ORDERDATE,
DUEDATE::DATE AS DUEDATE,
SHIPDATE::DATE AS SHIPDATE,
ONLINEORDERFLAG,
SALESORDERNUMBER,
PURCHASEORDERNUMBER,
ACCOUNTNUMBER,
CUSTOMERID,
SALESPERSONID,
TERRITORYID,
BILLTOADDRESSID,
SHIPMETHODID,
SUBTOTAL,
TAXAMT,
FREIGHT,
TOTALDUE,
MODIFIEDDATE::DATE AS MODIFIEDDATE
FROM Sales_SalesOrderHeader

-- PURCHASEORDERNUMBER and SALESPERSONID is null if ONLINEORDERFLAG is 1 where they ordered online
-- thus no need to impute these nulls


-- cleaning for Sales_SalesOrderDetail
-- select needed columns
CREATE OR REPLACE TABLE Sales_SalesOrderDetail_clean AS
SELECT SALESORDERID,
SALESORDERDETAILID,
CARRIERTRACKINGNUMBER,
ORDERQTY,
PRODUCTID,
SPECIALOFFERID,
UNITPRICE,
UNITPRICEDISCOUNT,
LINETOTAL,
MODIFIEDDATE::DATE AS MODIFIEDDATE
FROM Sales_SalesOrderDetail

-- CARRIERTRACKINGNUMBER is null when the ONLINEORDERFLAG is 1 from Sales_SalesOrderHeader table
-- thus no need to impute these nulls


-- cleaning for HumanResources_Department
-- select needed columns
CREATE OR REPLACE TABLE HumanResources_Department_clean AS
SELECT 
DEPARTMENTID,
NAME,
GROUPNAME,
MODIFIEDDATE::DATE AS MODIFIEDDATE
FROM HumanResources_Department

