--Check for null values
SELECT *
FROM PERSON_ADDRESS_CLEANED
WHERE ADDRESSID IS NULL OR CITY IS NULL OR STATEPROVINCEID IS NULL OR POSTALCODE IS NULL
OR SPATIALLOCATION IS NULL OR MODIFIEDDATE IS NULL OR ADDRESS IS NULL

--Check for null values
SELECT *
FROM HUMANRESOURCES_EMPLOYEE_CLEANED
WHERE BUSINESSENTITYID IS NULL OR NATIONALIDNUMBER IS NULL OR LOGINID IS NULL 
OR ORGANIZATIONNODE IS NULL OR ORGANIZATIONLEVEL IS NULL OR JOBTITLE IS NULL 
OR BIRTHDATE IS NULL OR MARITALSTATUS IS NULL OR GENDER IS NULL
OR HIREDATE IS NULL OR SALARIEDFLAG IS NULL OR VACATIONHOURS IS NULL
OR SICKLEAVEHOURS IS NULL OR CURRENTFLAG IS NULL OR MODIFIEDDATE IS NULL

--Check for null values
SELECT *
FROM PERSON_STATEPROVINCE_CLEANED
WHERE STATEPROVINCEID IS NULL OR STATEPROVINCECODE IS NULL OR COUNTRYREGIONCODE IS NULL
OR ISONLYSTATEPROVINCEFLAG IS NULL OR NAME IS NULL OR TERRITORYID IS NULL
OR MODIFIEDDATE IS NULL

--Check for null values
SELECT *
FROM SALES_SPECIALOFFERPRODUCT_CLEANED
WHERE SPECIALOFFERID IS NULL OR PRODUCTID IS NULL OR MODIFIEDDATE IS NULL

--Check for null values
SELECT *
FROM SALES_SPECIALOFFER_CLEANED
WHERE SPECIALOFFERID IS NULL OR DESCRIPTION IS NULL OR DISCOUNTPCT IS NULL
OR TYPE IS NULL OR CATEGORY IS NULL OR STARTDATE IS NULL OR ENDDATE IS NULL
OR MINQTY IS NULL OR MAXQTY IS NULL OR MODIFIEDDATE IS NULL



--Check for duplicate ids
SELECT ADDRESSID, COUNT(*) AS duplicate_count
FROM PERSON_ADDRESS_CLEANED
GROUP BY ADDRESSID
HAVING COUNT(*) > 1;

--Check for duplicate ids
SELECT BUSINESSENTITYID, COUNT(*) AS duplicate_count
FROM HUMANRESOURCES_EMPLOYEE_CLEANED
GROUP BY BUSINESSENTITYID
HAVING COUNT(*) > 1;

--Check for duplicate ids
SELECT STATEPROVINCEID, COUNT(*) AS duplicate_count
FROM PERSON_STATEPROVINCE_CLEANED
GROUP BY STATEPROVINCEID
HAVING COUNT(*) > 1;

--Check for duplicate ids
SELECT SPECIALOFFERID, PRODUCTID, COUNT(*) AS duplicate_count
FROM SALES_SPECIALOFFERPRODUCT_CLEANED
GROUP BY SPECIALOFFERID, PRODUCTID
HAVING COUNT(*) > 1;

--Check for duplicate ids
SELECT SPECIALOFFERID, COUNT(*) AS duplicate_count
FROM SALES_SPECIALOFFER_CLEANED
GROUP BY SPECIALOFFERID
HAVING COUNT(*) > 1;
