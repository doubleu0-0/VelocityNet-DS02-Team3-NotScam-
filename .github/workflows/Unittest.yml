name: Format, Lint, and Coverage Checks

on: [push, pull_request]

jobs:
  lint-format-and-coverage:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    # Install dependencies
    - name: Install dependencies
      run: |
        pip install flake8 black nbconvert pytest pytest-cov

    # Lint Python files with flake8
    - name: Lint Python files with flake8
      run: flake8 VelocityNet-DS02-Team3-NotScam-/Code/DataCleaning --max-line-length=120
      continue-on-error: true

    # Lint Jupyter notebooks
    - name: Lint Jupyter notebooks
      run: |
        mkdir -p AUTO_TRANSFORMATION/converted_notebooks
        find AUTO_TRANSFORMATION/ -name "*.ipynb" -exec jupyter nbconvert --to script {} --output-dir AUTO_TRANSFORMATION/converted_notebooks \;
        flake8 AUTO_TRANSFORMATION/converted_notebooks --max-line-length=120
      continue-on-error: true

    # Check formatting with black for Python files
    - name: Check formatting with black
      run: black VelocityNet-DS02-Team3-NotScam-/Code/DataCleaning --line-length 120
      continue-on-error: true

    # Generate a coverage report in XML and HTML formats
    - name: Run tests with coverage and generate reports
      run: |
        pytest --cov=VelocityNet-DS02-Team3-NotScam-/Code/DataCleaning \
               --cov=AUTO_TRANSFORMATION/converted_notebooks \
               --cov-report=xml \
               --cov-report=html
      continue-on-error: true

    # Upload the XML coverage report
    - name: Upload XML Coverage Report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report-xml
        path: coverage.xml

    # Upload the HTML coverage report
    - name: Upload HTML Coverage Report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report-html
        path: htmlcov/
