name: Format, Lint, and Coverage Checks

on: [push, pull_request]

jobs:
  lint-and-coverage:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    # Set up Python
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'  # Use a compatible Python version

    # Install dependencies
    - name: Install dependencies
      run: |
        pip install flake8 flake8-nb black pytest pytest-cov nbconvert modin[snowflake] snowflake-connector-python snowflake-snowpark-python

    # Verify source notebook exists
    - name: Verify Source Notebook Exists
      run: ls -la Code/DataCleaning/AUTO_TRANSFORMATION/

    # Convert Jupyter Notebook to Python script
    - name: Convert Jupyter Notebook to Python script
      run: |
        mkdir -p Code/DataCleaning/AUTO_TRANSFORMATION/converted_notebooks
        jupyter nbconvert --to script \
          Code/DataCleaning/AUTO_TRANSFORMATION/notebook_app.ipynb \
          --output-dir=Code/DataCleaning/AUTO_TRANSFORMATION/converted_notebooks \
          --output=notebook_app
    
        # Forcefully rename to .py if it ends with .py.txt
        if [ -f Code/DataCleaning/AUTO_TRANSFORMATION/converted_notebooks/notebook_app.py.txt ]; then
          mv Code/DataCleaning/AUTO_TRANSFORMATION/converted_notebooks/notebook_app.py.txt \
             Code/DataCleaning/AUTO_TRANSFORMATION/converted_notebooks/notebook_app.py
        elif [ -f Code/DataCleaning/AUTO_TRANSFORMATION/converted_notebooks/notebook_app.txt ]; then
          mv Code/DataCleaning/AUTO_TRANSFORMATION/converted_notebooks/notebook_app.txt \
             Code/DataCleaning/AUTO_TRANSFORMATION/converted_notebooks/notebook_app.py
        fi

    # Verify Converted Files
    - name: Verify Converted Files
      run: ls -la Code/DataCleaning/AUTO_TRANSFORMATION/converted_notebooks/

    # Lint Python files with flake8
    - name: Lint Python files
      run: flake8 Code/DataCleaning --max-line-length=120
      continue-on-error: true

    # Lint the converted Jupyter Notebook script
    - name: Lint Converted Notebook Script
      run: flake8 Code/DataCleaning/AUTO_TRANSFORMATION/converted_notebooks/notebook_app.py --max-line-length=120
      continue-on-error: true

    # Check formatting with black
    - name: Check formatting with black
      run: black Code/DataCleaning --line-length 120
      continue-on-error: true

    # Run tests with coverage and generate XML report
    - name: Run tests and generate coverage report
      run: |
        pytest test/test_unittest.py \
               --cov=Code/DataCleaning \
               --cov=Code/DataCleaning/AUTO_TRANSFORMATION/converted_notebooks \
               --cov-report=xml \
               --cov-report=html

    # Upload the XML coverage report
    - name: Upload XML Coverage Report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report-xml
        path: coverage.xml

    # Upload the HTML coverage report
    - name: Upload HTML Coverage Report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report-html
        path: htmlcov/

